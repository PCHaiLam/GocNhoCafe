@model IEnumerable<CafeGocNho_63134417.Models.HOADON>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int totalQuantity = 0;
    int totalPrice = 0;
}

<div class="h-full grid grid-cols-3">
    <div class="col-span-2">
        <div class="h-20 grid grid-cols-3 mx-4 items-center">
            <div class="col-span-1 grid grid-cols-2">
                <div class="">
                    <div class="text-xl font-bold w-[220px]">Hóa đơn @ViewBag.BillId</div>
                    @if (ViewBag.TableId != null)
                    {
                        <div class="min-w-max text-xl text-green-500"><i class="fa-solid fa-table px-2 py-1 border-2 rounded-xl"></i> Bàn @ViewBag.TableId</div>
                    }
                    else
                    {
                        <h2 class="text-xl font-semibold ">Chọn bàn để xem chi tiết</h2>
                    }
                </div>
                
            </div>
            <form id="searchForm" method="get" class="flex justify-around col-span-2">
                <input type="text" name="search" placeholder="Tìm kiếm món ăn..." onfocus="showProductList()" oninput="filterProducts()" class="w-72 h-full border px-2 py-1 rounded-md focus:ring-2 focus:ring-yellow-500">
                <ul id="productList" class="mt-10 px-2 w-[500px] h-[600px] hidden absolute z-10 rounded-xl border-2 bg-white max-h-[500px] overflow-scroll overflow-x-hidden">
                    @foreach (var item in ViewBag.Menu)
                    {
                        <li class="product-item h-24 w-full flex items-center cursor-pointer active:bg-yellow-200" onclick="addToCart('@ViewBag.BillId','@item.MAMH', '@item.TENMH', '@item.DVT', @item.GIACA)">
                            <div class="w-[80px] h-[80px] mr-4">
                                <img alt="Image" class="h-[80px] w-[auto] p-1 shadow border rounded-xl" src="@(string.IsNullOrEmpty(item.ANH) ? Url.Content("~/Images/plate-utensils.png") : Url.Content("~/Images/imgMenu/" + item.ANH))" />
                            </div>
                            <div class="w-full grid grid-cols-2">
                                <h3>@item.TENMH</h3>
                                <h3>@item.DVT</h3>
                                <h3>@item.MAMH</h3>
                                <h3>Giá: @item.GIACA</h3>
                                <h3>Tồn: @item.SOLUONGHANG</h3>
                            </div>
                        </li>
                    }
                </ul>
                <i title="Lịch sử nhập đơn" class="fa-solid fa-rotate-left text-3xl hover:text-green-400 cursor-pointer"></i>
            </form>
        </div>

        <div class="h-[530px] mt-[-5px] ml-4 p-2 bg-white rounded-3xl shadow-lg">
            <ul>
                @foreach (var item in ViewBag.CTHD)
                {
                    totalQuantity += item.SOLUONG;
                    totalPrice += item.MENU.GIACA * item.SOLUONG;

                    <li class="flex items-center py-2 border-b">
                        <form class="mx-1" method="post" action="@Url.Action("Xoa_63134417", "HOADONs_63134417")" onsubmit="return confirm('Bạn có chắc chắn muốn xóa không?');">
                            <input type="hidden" name="maBan" value="@ViewBag.TableId" />
                            <input type="hidden" name="maHD" value="@ViewBag.BillId" />
                            <input type="hidden" name="maMH" value="@item.MENU.MAMH" />
                            <button type="submit" class="mr-2" onclick="removeFromCart(item.MaMH)"  name="removeInBillDetail">🗑️</button>
                        </form>
                        
                        <span class="hidden">@item.MENU.MAMH</span>
                        <span class="w-[480px]">@item.MENU.TENMH</span>

                        <button class="px-2 py-1 border rounded" onclick="updateQuantity(item.MaMH, item.SoLuong - 1)">➖</button>

                        <input type="number" class="w-12 text-center mx-2 border rounded" value="@item.SOLUONG" min="@item.SOLUONG" oninput="updateQuantity(item.MaMH, parseInt(this.value) || 1)" />

                        <button class="px-2 py-1 border rounded" onclick="updateQuantity(item.MaMH, item.SoLuong + 1)">➕</button>

                        <span class="ml-4">@item.MENU.GIACA</span>
                        <span class="ml-4">@(@item.MENU.GIACA * @item.SOLUONG)</span>
                    </li>
                }
            </ul>
            <ul id="BillDetail">
                
            </ul>
        </div>
    </div>
    <div class="ml-4 w-full col-span-1 grid text-right">
        <p id="dateTimeDisplay" class="h-8"></p>
        <div class="grid grid-cols-2 mx-4">
            <div class="text-left" title="Người nhận đơn"> Người nhận đơn <i class="fa-solid fa-user p-2 rounded-2xl border-2 "></i></div> <p>@Model.FirstOrDefault().NHANVIEN.TENNV</p>
            <p class="text-left">Tổng hàng</p><p><span title="Tổng sản phẩm" class="px-3 py-1 border-2 rounded-xl">@totalQuantity</span></p>
            <p class="text-left">Tổng tiền hàng</p><p>@totalPrice.ToString("N0")</p>
            <p class="text-left">Giảm giá</p>
            <div class="flex h-8 justify-end">
                <input type="number" id="discountInput" class="border rounded px-2 py-1 w-16" min="0" step="1" value="@Model.FirstOrDefault().GIAMGIA" />
                <button onclick="applyDiscount()" class="border-2">Giảm</button>
            </div>
            <p class="text-left">Tổng hóa đơn</p><p id="totalPriceDisplay">@totalPrice.ToString("N0")</p>
        </div>
        <div class="h-16 flex justify-between font-bold text-white items-center">
            @if (Session["Role"].ToString() == "Nhân viên")
            {
                <button disabled class="w-[140px] p-3 border rounded-3xl bg-gray-400 opacity-30"><i class="fa-solid fa-print"></i> In tạm tính</button>
                <button disabled class="w-[140px] p-3 border rounded-3xl bg-green-400 opacity-30"><i class="fa-solid fa-dollar-sign"></i> Thanh toán</button>
            }
            else
            {
                <a href="javascript:void(0);"
                   onclick="window.location.href='@Url.Action("Index", "CHITIETHOADONs_63134417", new { tableId = ViewBag.TableId, billId = ViewBag.BillId })' + '&discount=' + document.getElementById('discountInput').value;"
                   class="w-[140px] p-3 border rounded-3xl bg-gray-400 active:bg-gray-500 hover:text-yellow-300">
                    <i class="fa-solid fa-print"></i> In tạm tính
                </a>

                <form method="post" action="@Url.Action("ThanhToan_63134417", "HOADONs_63134417")">
                    <input type="hidden" name="maBan" value="@ViewBag.TableId" />
                    <input type="hidden" name="maHD" value="@ViewBag.BillId" />
                    <input type="hidden" id="discountValue" name="discount" />
                    <button type="submit" class="w-[140px] p-3 border rounded-3xl bg-green-400 active:bg-green-500 hover:text-yellow-300"><i class="fa-solid fa-dollar-sign"></i> Thanh toán</button>
                </form>
            }

            @*@if (ViewBag.Pay == false)
        {*@
            <form method="post" action="@Url.Action("XacNhan_63134417", "HOADONs_63134417")">
                <input type="hidden" name="maBan" value="@ViewBag.TableId" />
                <input type="hidden" name="maHD" value="@ViewBag.BillId" />
                <input type="hidden" name="maNV" value="@Session["MaNV"]" />
                <input type="hidden" id="cartData" name="cartData" value="" />
                <button id="confirmButton" disabled onclick="submitCart()" type="submit" class="w-[140px] p-3 border rounded-3xl bg-blue-400 active:bg-blue-500 hover:text-yellow-300"><i class="fa-solid fa-bell-concierge"></i> Xác nhận</button>
            </form>
            @*}
        else
        {
            <button disabled type="submit" class="w-[140px] p-3 border rounded-3xl bg-blue-400 opacity-30"><i class="fa-solid fa-bell-concierge"></i> Xác nhận</button>
        }*@

        </div>
    </div>
</div>

<script>
    function showProductList() {
        document.getElementById('productList').classList.remove('hidden');
    }

    function filterProducts() {
        const input = document.querySelector('input[name="search"]');
        const filter = input.value.toLowerCase();
        const productList = document.getElementById('productList');
        const items = productList.getElementsByClassName('product-item');

        // Hiển thị danh sách sản phẩm khi bắt đầu tìm kiếm
        if (filter) {
            productList.classList.remove('hidden');
        } else {
            productList.classList.add('hidden');
        }

        for (let i = 0; i < items.length; i++) {
            const itemText = items[i].textContent || items[i].innerText;
            items[i].style.display = itemText.toLowerCase().includes(filter) ? '' : 'none';
        }
    }

    window.onclick = function (event) {
        const productList = document.getElementById('productList');
        // Kiểm tra nếu click ngoài input search và ngoài productList
        if (!event.target.matches('input[name="search"]') && !productList.contains(event.target)) {
            productList.classList.add('hidden');
        }
    };

    let cart = [];

    function addToCart(maHD, maMH, tenMH, dvt, gia) {
        let product = cart.find(p => p.MaMH === maMH);
        if (product) {
            product.SoLuong += 1;
        } else {
            cart.push({
                MaHD: maHD,
                MaMH: maMH,
                TenMH: tenMH,
                DVT: dvt,
                Gia: gia,
                SoLuong: 1
            });
        }
        updateConfirmButton();
        renderCart();
    }

    function updateConfirmButton() {
        const confirmButton = document.getElementById("confirmButton");
        confirmButton.disabled = cart.length === 0;
    }
    updateConfirmButton();
    function renderCart() {
        const productList = document.getElementById("BillDetail");
        productList.innerHTML = "";
        cart.forEach(item => {
            const li = document.createElement("li");
            li.className = "flex items-center py-2 border-b";

            // Xóa sản phẩm
            const deleteButton = document.createElement("button");
            deleteButton.innerHTML = "🗑️";
            deleteButton.className = "mr-2";
            deleteButton.onclick = () => removeFromCart(item.MaMH);

            // Tên món ăn và thông tin khác
            const itemName = document.createElement("span");
            itemName.className = "w-[480px]";
            itemName.textContent = `${item.TenMH}`;

            // Phần điều chỉnh số lượng
            const decrementButton = document.createElement("button");
            decrementButton.textContent = "➖";
            decrementButton.className = "px-2 py-1 border rounded";
            decrementButton.onclick = () => updateQuantity(item.MaMH, item.SoLuong - 1);

            // Input cho số lượng
            const quantityInput = document.createElement("input");
            quantityInput.type = "number";
            quantityInput.className = "w-12 text-center mx-2 border rounded";
            quantityInput.value = item.SoLuong;
            quantityInput.min = 1;
            quantityInput.oninput = (e) => updateQuantity(item.MaMH, parseInt(e.target.value) || 1);

            const incrementButton = document.createElement("button");
            incrementButton.textContent = "➕";
            incrementButton.className = "px-2 py-1 border rounded";
            incrementButton.onclick = () => updateQuantity(item.MaMH, item.SoLuong + 1);

            // Hiển thị giá và tổng giá
            const price = document.createElement("span");
            price.className = "ml-4";
            price.textContent = item.Gia.toLocaleString();

            const totalPrice = document.createElement("span");
            totalPrice.className = "ml-4";
            totalPrice.textContent = (item.Gia * item.SoLuong).toLocaleString();

            // Thêm tất cả vào li
            li.appendChild(deleteButton);
            li.appendChild(itemName);
            li.appendChild(decrementButton);
            li.appendChild(quantityInput);
            li.appendChild(incrementButton);
            li.appendChild(price);
            li.appendChild(totalPrice);

            // Thêm li vào danh sách
            productList.appendChild(li);
        });
    }


    function submitCart() {
        document.getElementById('cartData').value = JSON.stringify(cart);
        document.querySelector("form").submit();  // Submit the form
    }

    function updateQuantity(maMH, newQuantity) {
        const product = cart.find(p => p.MaMH === maMH);
        if (product) {
            product.SoLuong = Math.max(1, newQuantity); // Đảm bảo số lượng tối thiểu là 1
            renderCart();
        }
    }

    function removeFromCart(maMH) {
        cart = cart.filter(p => p.MaMH !== maMH);
        renderCart();
    }

    let totalPrice = @totalPrice;

    function discountBill(discount, price) {
        return price - (discount * price / 100);
    }

    function applyDiscount() {
        const discount = parseInt(document.getElementById("discountInput").value) || 0;
        const discountedTotal = discountBill(discount, totalPrice);

        document.getElementById("totalPriceDisplay").innerText = discountedTotal.toLocaleString();
        document.getElementById("discountValue").value = discount;
    }
</script>